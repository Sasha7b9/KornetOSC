#include "Settings.h"
#include "SettingsChannel.h"
#include "FPGA/FPGA.h"
#include "FPGA/FPGAMath.h"
#include "FPGA/RShift.h"
#include "Keyboard/Keyboard.h"
#include "Utils/Math.h"
#include "Utils/StringUtils.h"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Структура для описания диапазона масштаба по напряжению.
typedef struct
{
    const char *name[2][2];     // Название диапазона в текстовом виде, пригодном для вывода на экран.
} RangeStruct;

// Массив структур описаний масштабов по напряжению.
static const RangeStruct ranges[Range::Size] =
{
    {{{"2\x10мВ",  "20\x10мВ"}, {"2\x10мV",  "20\x10мV"}}},
    {{{"5\x10мВ",  "50\x10мВ"}, {"5\x10mV",  "50\x10mV"}}},
    {{{"10\x10мВ", "0.1\x10В"}, {"10\x10mV", "0.1\x10V"}}},
    {{{"20\x10мВ", "0.2\x10В"}, {"20\x10mV", "0.2\x10V"}}},
    {{{"50\x10мВ", "0.5\x10В"}, {"50\x10mV", "0.5\x10V"}}},
    {{{"0.1\x10В", "1\x10В"},   {"0.1\x10V", "1\x10V"}}},
    {{{"0.2\x10В", "2\x10В"},   {"0.2\x10V", "2\x10V"}}},
    {{{"0.5\x10В", "5\x10В"},   {"0.5\x10V", "5\x10V"}}},
    {{{"1\x10В",   "10\x10В"},  {"1\x10V",   "10\x10V"}}},
    {{{"2\x10В",   "20\x10В"},  {"2\x10V",   "20\x10V"}}},
    {{{"5\x10В",   "50\x10В"},  {"5\x10V",   "50\x10V"}}}
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void sChannel_SetEnabled(Chan ch, bool enabled)
{
    SET_ENABLED(ch) = enabled;
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
pString Range::ToString(Divider divider)
{
    return ranges[value].name[LANG][(int)divider];
}
