#include "HandlersKeys.h"
#include "Menu.h"
#include "Settings/Settings.h"
#include "FPGA/FPGA.h"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Handlers::E(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::RShiftLessA(KeyEvent)
{
    FPGA::RShiftChange(A, -1);
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::RShiftMoreA(KeyEvent)
{
    FPGA::RShiftChange(A, 1);
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::RShiftLessB(KeyEvent)
{
    FPGA::RShiftChange(B, -1);
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::RShiftMoreB(KeyEvent)
{
    FPGA::RShiftChange(B, 1);
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Range(KeyEvent)
{

}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::TShift(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::TBase(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Func(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Arrow(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::TrigLev(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Chan(KeyEvent event)
{
    if(event.type.Is(TypePress::Release))
    {
        if(event.key.Is(Key::ChannelA))
        {
            SET_ENABLED_A = !SET_ENABLED_A;
        }
        if(event.key.Is(Key::ChannelB))
        {
            SET_ENABLED_B = !SET_ENABLED_B;
        }
    }
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Function(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Measures(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Memory(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Service(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Time(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Start(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Trig(KeyEvent)
{
}

//----------------------------------------------------------------------------------------------------------------------------------------------------
void Handlers::Display(KeyEvent)
{
}
